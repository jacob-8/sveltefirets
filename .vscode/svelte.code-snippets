{
	// Place your living-dictionaries workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	// TYPESCRIPT
	"Inline Vitest": {
		"scope": "javascript,typescript",
		"prefix": "v-inv",
		"body": [
			"if (import.meta.vitest) {",
			"  $1",
			"}",
		]
	},
	"Vitest Test": {
		"scope": "javascript,typescript",
		"prefix": "v-test",
		"body": [
			"test('$1', () => {",
			"  expect($2).toEqual();",
			"  expect($3).toMatchInlineSnapshot();",
			"});",
		]
	},
	"Vitest Describe": {
		"scope": "javascript,typescript",
		"prefix": "v-desc",
		"body": [
			"describe('$1', () => {",
			"  test('$2', () => {",
			"    expect($3).toEqual();",
			"    expect($4).toMatchInlineSnapshot();",
			"  });",
			"});",
		]
	},

	// SVELTE
	"svelte-script-tag": {
		"scope": "svelte",
		"prefix": "s-script",
		"body": [
			"<script lang=\"ts\">",
			"  $1",
			"</script>",
		]
	},
	"svelte-json-stringify": {
		"scope": "svelte",
		"prefix": "s-json",
		"body": [
			"<pre>{JSON.stringify($1, null, 2)}</pre>",
		]
	},
	"svelte-html": {
		"scope": "svelte",
		"prefix": "s-html",
		"body": [
			"{@html ${1:content}}"
		],
		"description": "html content"
	},
	"svelte-if-block": {
		"scope": "svelte",
		"prefix": "s-if-block",
		"body": [
			"{#if ${1:condition}}",
			"$2{/if}"
		],
		"description": "if block"
	},
	"svelte-if-else-block": {
		"scope": "svelte",
		"prefix": "s-if-else-block",
		"body": [
			"{#if ${1:condition}}",
			"  $2",
			"{:else}",
			"  $3",
			"{/if}"
		],
		"description": "if else block"
	},
	"svelte-else-block": {
		"scope": "svelte",
		"prefix": "s-else-block",
		"body": [
			"{:else}",
			"  $1"
		],
		"description": "else block"
	},
	"svelte-if-else-if-block": {
		"scope": "svelte",
		"prefix": "s-if-else-if-block",
		"body": [
			"{#if ${1:condition}}",
			"  $2",
			"{:else if ${3: otherCondition}}",
			"  $4",
			"{:else}",
			"  $5",
			"{/if}"
		],
		"description": "if else if block"
	},
	"svelte-else-if-block": {
		"scope": "svelte",
		"prefix": "s-else-if-block",
		"body": [
			"{:else if ${1: otherCondition}}",
			"  $2"
		],
		"description": "else if block"
	},
	"svelte-each-block": {
		"scope": "svelte",
		"prefix": "s-each-block",
		"body": [
			"{#each ${1:items} as ${2:item}}",
			"  $3",
			"{/each}"
		],
		"description": "each block"
	},
	"svelte-each-else-block": {
		"scope": "svelte",
		"prefix": "s-each-else-block",
		"body": [
			"{#each ${1:items} as ${2:item}}",
			"  $3",
			"{:else}",
			"  $4",
			"{/each}"
		],
		"description": "each else block"
	},
	"svelte-each-index-block": {
		"scope": "svelte",
		"prefix": "s-each-index-block",
		"body": [
			"{#each ${1:items} as ${2:item},${3:i}}",
			"  $4",
			"{/each}"
		],
		"description": "each index block"
	},
	"svelte-each-key-block": {
		"scope": "svelte",
		"prefix": "s-each-key-block",
		"body": [
			"{#each ${1:items} as ${2:item},(${3:key})}",
			"  $4",
			"{/each}"
		],
		"description": "each index block"
	},
	"svelte-each-index-key-block": {
		"scope": "svelte",
		"prefix": "s-each-index-key-block",
		"body": [
			"{#each ${1:items} as ${2:item},i (${3:key})}",
			"  $4",
			"{/each}"
		],
		"description": "each index key block"
	},
	"svelte-each-length": {
		"scope": "svelte",
		"prefix": "s-each-length",
		"body": [
			"{#each {length: ${1:count}} as _, ${2:index}}",
			"  $3",
			"{/each}"
		],
		"description": "each index key block"
	},
	"svelte-await-then-block": {
		"scope": "svelte",
		"prefix": "s-await-then-block",
		"body": [
			"{#await ${1:promise}}",
			"  <!-- pending -->",
			"{:then ${2:value}}",
			"  <!-- fulfilled -->",
			"{/await}"
		],
		"description": "await then block"
	},
	"svelte-then-block": {
		"scope": "svelte",
		"prefix": "s-then-block",
		"body": [
			"{:then ${1:value}}",
			"  <!-- promise was fulfilled -->"
		],
		"description": "then block"
	},
	"svelte-await-short-block": {
		"scope": "svelte",
		"prefix": "s-await-short-block",
		"body": [
			"{#await ${1:promise} then ${2:value}}",
			"  <!-- promise was fulfilled -->",
			"{/await}"
		],
		"description": "await short block"
	},
	"svelte-await-catch-block": {
		"scope": "svelte",
		"prefix": "s-await-catch-block",
		"body": [
			"{#await ${1:promise}}",
			"  <!-- ${1:promise} is pending -->",
			"{:then ${value}}",
			"  <!-- ${1:promise} was fulfilled -->",
			"{:catch error}",
			"  <!-- ${1:promise} was rejected -->",
			"{/await}"
		],
		"description": "await catch block"
	},
	"svelte-catch-block": {
		"scope": "svelte",
		"prefix": "s-catch-block",
		"body": [
			"{:catch error}",
			"  <!-- promise was rejected -->"
		],
		"description": "catch block"
	},
	"svelte-const-block": {
		"scope": "svelte",
		"prefix": "s-const-block",
		"body": [
			"{@const ${1:derived} = ${2:ingredients}}"
		]
	},
	"svelte-key-block": {
		"scope": "svelte",
		"prefix": "s-key-block",
		"body": [
			"{#key ${1:expression}}",
			"  $2",
			"{/key}"
		]
	}
}