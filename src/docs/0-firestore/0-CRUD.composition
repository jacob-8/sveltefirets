<script lang="ts">
  import { Button, Store } from "svelte-pieces";
  // Add
  import { add } from "sveltefirets";
  import type { Message } from "$lib/message.interface";
  // List, Update, Delete
  import { limit, orderBy } from "firebase/firestore";
  import { Collection, deleteDocument, update } from "sveltefirets";
  // Read
  import { Doc } from "sveltefirets";

  function sayHello(name: string) {
    add<Message>("messages", { text: "Hello from " + name });
  }

  const refField = "";
  const max = 5;

  const preloadedMessages: Message[] = [
    { text: "preloadedMessage from the server" },
  ];
  function changeGreeting(messageId: string) {
    const newName = prompt("Enter updated name:");
    if (newName) {
      update<Message>(`messages/${messageId}`, {
        text: `Actually the name is ${newName}`,
      });
    }
  }

  function deleteGreeting(messageId: string, messages: Message[]) {
    if (messages.length > 2) {
      deleteDocument(`messages/${messageId}`);
    } else {
      alert(
        "Keep at least two messages around for demonstration. Try adding a few more and then you will be able to delete.",
      );
    }
  }
</script>

<div>Say Hello:</div>

<Store startWith={"John"} let:set let:store={text}>
  <input
    style="border: 1px solid gray; border-radius: 4px; padding: 2px"
    type="text"
    value={text}
    maxlength="10"
    placeholder="Enter name"
    on:keyup={(e) => e.key === "Enter" && sayHello(text)}
    on:input={(e) => {
      //@ts-ignore
      set(e.target.value);
    }}
  />
  <Button size="sm" onclick={() => sayHello(text)}>Add</Button>
</Store>

<div>
  List greetings
</div>
<Collection
  path="messages"
  queryConstraints={[limit(max), orderBy("updatedAt", "desc")]}
  startWith={preloadedMessages}
  let:data={messages}
  {refField}
  log
>
  {#each messages as message}
    <b>{message.text}</b> |
    <small>ID: {message.id} | {message.updatedAt?.toDate()}</small>
    <br />
    <Button size="sm" onclick={() => changeGreeting(message.id)}>Update</Button>
    <Button
      size="sm"
      onclick={() => deleteGreeting(message.id, messages)}
      color="red"
      form="simple">Delete</Button
    >
    {#if refField}
      <pre style="font-size: 70%;">{JSON.stringify(message, null, 2)}</pre>
    {/if}
    <hr />
  {/each}
</Collection>
